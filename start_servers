#!/bin/bash

# Maximum number of faults that can be tolerated
F=$1

if ! [ $F -gt 0 ] 2> /dev/null; then
    echo -e "Usage: $0 F\n\tF  --  number of faults that can be tolerated"
    exit 1
fi

# Total number of servers (n = 3f + 1)
N=$((3 * $F + 1))

LOWER_PORT=4567
UPPER_PORT=65535
servers="servers="
DIRECTORY="servers.tmp"


function clean_up {
    pkill -f "io.github.diogocp.secpassman.server.Main"
}


if [ $(($N + $LOWER_PORT)) -le "$UPPER_PORT" ]; then
    trap clean_up SIGTERM SIGINT
    for ((i=1; i<=$N; i++)); do
        port=$(($i+$LOWER_PORT))
        if [ "$i" -lt "$N" ]; then
            servers="${servers}localhost:$port,"
        else
            servers="${servers}localhost:$port"
        fi
    done

    rm -r "$DIRECTORY/"
    mkdir "$DIRECTORY"
    rm -r "certs/"
    mkdir "certs"

    for ((i=1; i<=$N; i++)); do
        port=$(($i+$LOWER_PORT))

        mkdir "$DIRECTORY/server_$i/"
        pushd "$DIRECTORY/server_$i" > /dev/null

        echo "$servers" > "config.properties"
        keytool -genkey -alias server -dname "CN=server_$i" -keyalg RSA -keystore server.jks -storepass server -keypass server
        keytool -exportcert -alias server -rfc -keystore server.jks -storepass server > "../../certs/server_$i.pem"

        echo "Starting server $i"
        ../../server/build/install/server/bin/server $port &
        echo "Process ID: $!"

        sleep 1
        popd > /dev/null
    done
    echo "Ready"
    printf "$servers\n" > "config.properties"
    wait
else
    echo "Invalid number of servers"
fi
